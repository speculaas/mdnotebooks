<ul>
<li>This is Yie-Sheng Chen. I am from Taiwan!</li>
<li>My career aspiration is to be able
to participate in developing or providing technical solution in a large scale distributed
system at the level of Uber or Netflix. In the process toward PhD, I am looking for a
relatively dedicated time to develop and work on original topics in computer engineering,
be able to gather insightful feedbacks, and some odd quality moments to raise the bar
of my computer science technical skills and understanding.</li>
<li>Attempting a master thesis on simulating photosynthesis is my futile trial toward
research. This ends up like playing in a ball game with no rule and boundary. I
stopped at conceptualization. But the takeaway is the idea I settled on trying going
forward: level of detail (LOD), conceptualizing to visualize photosynthesis at
organelle level, molecular level, and electromagnetic wave level. From then on, I
found this LOD idea shows up in different places: level of system logs, time
granularity of system metrics, layers of filters in convolutional neural network

becoming more abstract moving away from pixels values, and even the round-trip-
time as a critical criteria across a large order of magnitude of possible values in

network congestion control. Not a necessary target, but it would be neat if I am able to
explore this LOD idea in my research.</li>
<li>Regarding my professional development, UF graduate level core CS courses played
an important role. For example, Professor Sahni made advanced data structure
deceptively easy to absorb. And more importantly, these courses reminded me their
rich, solid foundations, subtle derivations. As opposed to some open interesting ideas
such as simulating photosynthesis, these subjects are like playing Tennis with rules,
boundary, and poses, etc.</li>
<li>I aspire to work on a large scale distributed system and also analyze the relevant
phenomena, subtleties, theory, and algorithms. And my work experience at ASUS
propels me toward this goal in the following progression: it first exposed me to
Android, a large software system, its version control, and etc. I also got the
opportunity to work on deep learning. Though not directly related to distributed
computing, I read many research papers and my coworkers hold meetings regularly to
discuss key papers, nurturing my basic research skills. Subsequently, I got to work on
a distributed system: Ceph. It’s great to get in touch with some distributed system
ideas such as PAXOS but our team’s focus is more limited to deployment and
operations in small scale private cloud. I wish I can go further: analyze larger scale systems, or be able to step outside taxing industry details to develop software
focusing on interesting ideas, and importantly, in a research-oriented academia setting
rich with accumulated knowledge, experiences, etc. and opportunities to interact with
associated experts near and far through years of research cooperation.</li>
<li>More details on my work experience at ASUS and how they may relate to distributed
system, software development and conducting research: Firstly. May, 2014~July,
2017: Android's Radio Interface Layer experience, which lies between modem and
system services, not only exposed me to a large software system, but also give me a
sense that telephony can be viewed as a system distributed among phone modem,
phone CPU and the Telecom infrastructures and how problems in one part affect
others. Secondly, July, 2017~Dec, 2018: Deep learning. At the beginning, I used extra
time to self-study the Stanford CS231n course and then was able to contribute to the
new team beginning with evaluating using deep learning to classify blurriness and
later doing a prove-of-concept showing face recognition model can also made to
classify face-pitch angle through transfer learning and even enhanced by distillation.
Thirdly, Jan, 2019~now: storage infrastructure where my team focused on Ceph.
During this time, I went through web searches and documents to develop procedures

to deploy and operate Ceph and other storage infrastructure systems such as lvm-
cache, NFS and Prometheus. And to better understand AT&T, I also studied AT&T

research's Cloud QoS Simulator paper. This introduce me to the field of reliability
analysis and combined with Ceph Crush paper I found a possible way to implement
partitioned placement strategy that I could not find online but actually hides in plain
sight as an example of crush rule in the Ceph Crush paper. More recently, I deployed
a 20PB+ Suse Enterprise Storage (SES) 5.5 object storage cluster consisted mainly of
25 dense OSD server nodes each packing 76 disks through Ansible and Deepsea. The
Deepsea configureation management system made deploying big system seemed easy.
But troubleshooting required going through another layers of abstractions and
concepts!</li>
<li>My former roommate at UF who worked at Bazaar Voice, Uber, Network, and now a staff engineer at Coinbase is also an inspiration for me. He introduced me to the challenging and yet fulfilling cloud computing industry in Silicon Valley. Initially, in 2013, I learned about the “fire at will” employment contract he got from Bazaar Voice. Later, when I learned he went to Netflix, I googled and learned about the keeper test at Netflix. Those are the scary and challenging parts. And the more positive part is his mentioning the “Tech blogs” to me as a great entry to the cloud computing industry. </li>
<li>I think my experience so far at UNM is great. I think one of the best discovery of my first semester here is a quote from John von Neumann listed on my compiler textbook: “In mathematics you don’t understand things. You just get used to them.”</li>
<li>And in Spring 2023, I was thrilled to find and enrolled in a course: ECE530 Cloud Computing. The main attraction is that the instructor is a former technical manager at Netflix. I think it’s a rare opportunity: few universities have instructors with such deep industry experience. And the result is satisfying although I hope there can be more materials related to his experience at Netflix. However, time is finite, only so much material can fit in a semester. </li>
<li></li>
</ul>
